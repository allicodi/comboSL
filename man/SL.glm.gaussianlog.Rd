% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SL.glm.gaussianlog.R
\name{SL.glm.gaussianlog}
\alias{SL.glm.gaussianlog}
\title{Generalized linear model with Gaussian family and log link}
\usage{
SL.glm.gaussianlog(Y, X, newX, family, obsWeights, link = "log", ...)
}
\arguments{
\item{Y}{A numeric outcome variable}

\item{X}{A \code{data.frame} of covariates constituting the training sample}

\item{newX}{A \code{data.frame} with the same column names and format as \code{X} constituting
the validation sample.}

\item{family}{Gaussian only}

\item{obsWeights}{Observation-level weights (not currently used)}

\item{link}{Link function}

\item{...}{Other arguments (not currently used)}
}
\value{
\describe{
 \item{\code{pred}}{Predicted outcomes based on predictors in \code{newX}}
 \item{\code{fit}}{A list with named entries \code{object} (the fitted \code{glm} regression object)}
}
}
\description{
The \code{glm.fit} algorithm is notoriously unstable for this fitting. If
convergence issues arise, try different starting values.
}
\examples{
# load cost data
data(cost_data)
# fit gaussian glm with log link
fit_glm.gaussianlog <- SL.glm.gaussianlog(Y = cost_data$totalcost, X = cost_data[, c("female", "race")],
                              newX = cost_data[, c("female", "race")])
# get back predictions
pred_glm.gaussianlog <- predict(fit_glm.gaussianlog$fit, newdata = cost_data[,c("female", "race")])
}
